plugins {
  id 'com.android.application'
}

android {

  publishNonDefault true

  compileSdkVersion rootProject.ext.compileSdkVersion as int

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    applicationId "com.vanniktech.emoji.sample"
    minSdkVersion rootProject.ext.minSdkVersion as int
    targetSdkVersion rootProject.ext.targetSdkVersion as int
    versionName rootProject.ext.versionName as String

    vectorDrawables.useSupportLibrary = true

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  archivesBaseName = "app-$versionName"

  def shouldSign = project.hasProperty('RELEASE_STORE_FILE') && project.hasProperty('RELEASE_STORE_PASSWORD') && project.hasProperty('RELEASE_KEY_ALIAS') && project.hasProperty('RELEASE_KEY_PASSWORD')

  if (shouldSign) {
    signingConfigs {
      release {
        // http://stackoverflow.com/a/21020469/1979703
        storeFile file(RELEASE_STORE_FILE)
        storePassword RELEASE_STORE_PASSWORD
        keyAlias RELEASE_KEY_ALIAS
        keyPassword RELEASE_KEY_PASSWORD
      }
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
      shrinkResources true
      zipAlignEnabled true

      if (shouldSign) {
        signingConfig signingConfigs.release
      }
    }
  }
  namespace 'com.vanniktech.emoji.sample'

  lintOptions {
    checkReleaseBuilds false
    //If you want to continue even if errors found use following line
    abortOnError false
  }
}

dependencies {
  implementation project(':emoji-ios')
  implementation project(':emoji-google')
  implementation project(':emoji-google-compat')
  implementation project(':emoji-twitter')
  implementation project(':emoji-facebook')
  implementation project(':emoji-kotlin')
  implementation project(':emoji-material')

  implementation rootProject.ext.supportAppCompat
  implementation rootProject.ext.supportRecyclerView

  debugImplementation libs.leakcanary.android


  androidTestImplementation libs.androidx.test.espresso
  androidTestImplementation libs.androidx.test.ext
  androidTestImplementation libs.androidx.test.rules
  androidTestImplementation libs.falcon
  androidTestImplementation libs.junitintegrationrules
  androidTestImplementation libs.espressocoreutils
}

configurations.all {
  resolutionStrategy {
    force rootProject.ext.supportAnnotations
  }
}
